"use strict";(self.webpackChunkk_8_s_god=self.webpackChunkk_8_s_god||[]).push([[347],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var o=t(96540);const c={},i=o.createContext(c);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},91201:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>_,frontMatter:()=>r,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"dpdk/vpp\u4e0edpdk\u7684\u5173\u7cfb","title":"vpp\u4e0edpdk\u7684\u5173\u7cfb","description":"dpdk\u4f5c\u4e3avpp\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u4e3b\u8981\u7528\u6765\u4ece\u7f51\u5361\u6536\u53d1\u5305\u3002","source":"@site/docs/dpdk/vpp\u4e0edpdk\u7684\u5173\u7cfb.md","sourceDirName":"dpdk","slug":"/dpdk/vpp\u4e0edpdk\u7684\u5173\u7cfb","permalink":"/blog/docs/dpdk/vpp\u4e0edpdk\u7684\u5173\u7cfb","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dpdk/vpp\u4e0edpdk\u7684\u5173\u7cfb.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"vpp","permalink":"/blog/docs/dpdk/vpp"},"next":{"title":"vpp\u4f7f\u7528","permalink":"/blog/docs/dpdk/vpp\u4f7f\u7528"}}');var c=t(74848),i=t(28453);const r={},d="vpp\u4e0edpdk\u7684\u5173\u7cfb",l={},s=[{value:"dpdk\u521d\u59cb\u5316\u6d41\u7a0b",id:"dpdk\u521d\u59cb\u5316\u6d41\u7a0b",level:2},{value:"\u8bfb\u53d6\u914d\u7f6e",id:"\u8bfb\u53d6\u914d\u7f6e",level:3},{value:"\u521d\u59cb\u5316\u5e93",id:"\u521d\u59cb\u5316\u5e93",level:3},{value:"\u6ce8\u518c\u8282\u70b9",id:"\u6ce8\u518c\u8282\u70b9",level:3},{value:"\u7f51\u53e3\u64cd\u4f5c",id:"\u7f51\u53e3\u64cd\u4f5c",level:3},{value:"vpp\u4e2ddpdk\u5185\u5b58\u7ba1\u7406",id:"vpp\u4e2ddpdk\u5185\u5b58\u7ba1\u7406",level:2},{value:"dpdk mempool",id:"dpdk-mempool",level:3}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"vpp\u4e0edpdk\u7684\u5173\u7cfb",children:"vpp\u4e0edpdk\u7684\u5173\u7cfb"})}),"\n",(0,c.jsx)(n.p,{children:"dpdk\u4f5c\u4e3avpp\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u4e3b\u8981\u7528\u6765\u4ece\u7f51\u5361\u6536\u53d1\u5305\u3002"}),"\n",(0,c.jsx)(n.p,{children:"vpp\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53c2\u6570\u521d\u59cb\u5316dpdk eal\u3002"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-shell",children:"EAL init args: -c a -n 1 --in-memory --huge-dir /mnt/hugepages --no-pci --proc-type primary --file-prefix vpp --master-lcore 1\n"})}),"\n",(0,c.jsx)(n.h2,{id:"dpdk\u521d\u59cb\u5316\u6d41\u7a0b",children:"dpdk\u521d\u59cb\u5316\u6d41\u7a0b"}),"\n",(0,c.jsx)(n.h3,{id:"\u8bfb\u53d6\u914d\u7f6e",children:"\u8bfb\u53d6\u914d\u7f6e"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:"dpdk_config\n"})}),"\n",(0,c.jsx)(n.h3,{id:"\u521d\u59cb\u5316\u5e93",children:"\u521d\u59cb\u5316\u5e93"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:"dpdk_lib_init\n"})}),"\n",(0,c.jsx)(n.h3,{id:"\u6ce8\u518c\u8282\u70b9",children:"\u6ce8\u518c\u8282\u70b9"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"\u8f93\u5165\u8282\u70b9"}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:"dpdk_device_inpu\n"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"\u8f93\u51fa\u8282\u70b9"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"\u63a5\u53e3tx function\u7684\u8d4b\u503c"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:"VNET_DEVICE_CLASS_TX_FN (dpdk_device_class)\n"})}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"\u63a5\u53e3output node\u548ctx node\u7684\u521d\u59cb\u5316"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"\u7f51\u53e3\u64cd\u4f5c",children:"\u7f51\u53e3\u64cd\u4f5c"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:'/* A class of hardware interface devices. */\n/* \u4e00\u7c7b\u786c\u4ef6\u63a5\u53e3\u7684\u64cd\u4f5c\u51fd\u6570\u96c6\u5408\uff0c\u8fd9\u4e9b\u51fd\u6570\u662f\u5728\u786c\u4ef6\u8bbe\u5907\u7684\u9a71\u52a8\u4e0a\u5c01\u88c5\u7684\u4e00\u5c42 */\ntypedef struct _vnet_device_class\n{\n    /* Index into main vector.\u7c7b\u7d22\u5f15 */\n    u32 index;\n\n    /* Device name (e.g. "FOOBAR 1234a").\u8bbe\u5907\u7c7b\u540d\u5b57 */\n    char *name;\n\n    /* Function to call when hardware interface is added/deleted. */\n    /* \u6dfb\u52a0/\u5220\u9664\u4e00\u4e2a\u8be5\u7c7b\u8bbe\u5907\u7684\u5b9e\u4f8b\u51fd\u6570 */\n    vnet_interface_function_t *interface_add_del_function;\n\n    /* Function to bring device administratively up/down. */\n    /* \u8bbe\u5907UP/DOWN\u64cd\u4f5c\u51fd\u6570 */\n    vnet_interface_function_t *admin_up_down_function;\n\n    /* Function to call when sub-interface is added/deleted */\n    /* \u4ee5\u8be5\u7c7b\u578b\u8bbe\u5907\u4e3a\u4e3b\u8bbe\u5907\uff0c\u6dfb\u52a0/\u5220\u9664\u4e00\u4e2a\u5b50\u63a5\u53e3\u7684\u51fd\u6570 */\n    vnet_subif_add_del_function_t *subif_add_del_function;\n\n    /* Function to call interface rx mode is changed */\n    /* \u63a5\u6536\u6a21\u5f0f\u53d8\u5316\u51fd\u6570 */\n    vnet_interface_set_rx_mode_function_t *rx_mode_change_function;\n\n    /* Function to call interface l2 mode is changed */\n    /* \u63a5\u53e3\u7684\u4e8c\u5c42\u6a21\u5f0f\u53d8\u5316\u64cd\u4f5c\u51fd\u6570 */\n    vnet_interface_set_l2_mode_function_t *set_l2_mode_function;\n\n    /* Redistribute flag changes/existence of this interface class. */\n    u32 redistribute;\n\n    /* Transmit function. */\n    /* \u53d1\u9001\u51fd\u6570 */\n    vlib_node_function_t *tx_function;\n\n    /* Transmit function candidate registration with priority */\n    /* \u6ce8\u518c\u7684\u591a\u4e2a\u5019\u9009\u7684\u53d1\u9001\u51fd\u6570\uff0c\u6700\u7ec8\u6839\u636e\u4f18\u5148\u7ea7\u9009\u62e9\u4e00\u4e2a\u6700\u9ad8\u7684\u8d4b\u503c\u7ed9tx_function */\n    vlib_node_fn_registration_t *tx_fn_registrations;\n\n    /* Error strings indexed by error code for this node. */\n    /* \u53d1\u9001\u51fd\u6570\u9519\u8bef\u539f\u56e0\u5b57\u7b26\u6570\u7ec4 */\n    char **tx_function_error_strings;\n\n    /* Number of error codes used by this node. */\n    /* tx_function_error_strings\u6570\u7ec4\u5927\u5c0f */\n    u32 tx_function_n_errors;\n\n    /* Renumber device name [only!] support, a control-plane kludge */\n    int (*name_renumber) (struct vnet_hw_interface_t * hi,\n                          u32 new_dev_instance);\n\n    /* Interface flow offload operations */\n    /* \u6d41\u91cf\u5378\u8f7d\u529f\u80fd\u64cd\u4f5c\u51fd\u6570\u96c6\u5408 */                      \n    vnet_flow_dev_ops_function_t *flow_ops_function;\n\n    /* Format device instance as name. */\n    format_function_t *format_device_name;\n\n    /* Parse function for device name. */\n    unformat_function_t *unformat_device_name;\n\n    /* Format device verbosely for this class. */\n    format_function_t *format_device;\n\n    /* Trace buffer format for TX function. */\n    format_function_t *format_tx_trace;\n\n    /* Format flow offload entry */\n    format_function_t *format_flow;\n\n    /* Function to clear hardware counters for device. */\n    /* \u6e05\u9664\u7edf\u8ba1\u51fd\u6570 */\n    void (*clear_counters) (u32 dev_class_instance);\n\n    uword (*is_valid_class_for_interface) (struct vnet_main_t * vnm,\n                                           u32 hw_if_index,\n                                           u32 hw_class_index);\n\n    /* Called when hardware class of an interface changes. */\n    void (*hw_class_change) (struct vnet_main_t * vnm,\n                             u32 hw_if_index, u32 new_hw_class_index);\n\n    /* Called to redirect traffic from a specific interface instance */\n    /* \u5f3a\u5236\u91cd\u5b9a\u5411\u4e00\u4e2a\u63a5\u53e3\u7684\u6d41\u91cf\u5230\u6307\u5b9a\u7684node */                         \n    void (*rx_redirect_to_node) (struct vnet_main_t * vnm,\n                                 u32 hw_if_index, u32 node_index);\n\n    /* Link-list of all device classes set up by constructors created below */\n    /* \u5f62\u6210\u94fe\u8868 */\n    struct _vnet_device_class *next_class_registration;\n\n    /* Function to set mac address. */\n    /* \u94fe\u8def\u5c42\u5730\u5740\u53d8\u5316\u51fd\u6570 */\n    vnet_interface_set_mac_address_function_t *mac_addr_change_function;\n} vnet_device_class_t;\n'})}),"\n",(0,c.jsx)(n.h2,{id:"vpp\u4e2ddpdk\u5185\u5b58\u7ba1\u7406",children:"vpp\u4e2ddpdk\u5185\u5b58\u7ba1\u7406"}),"\n",(0,c.jsx)(n.mermaid,{value:"graph TB\ndpdk_config--\x3edpdk_buffer_pool_create--\x3edpdk_pool_create--\x3erte_mempool_create_empty--\x3erte_pktmbuf_pool_init--\x3erte_mempool_get_priv\ndpdk_lib_init"}),"\n",(0,c.jsx)(n.p,{children:"dpdk_pool_create\u4e0erte_pktmbuf_pool_create\u7684\u533a\u522b\uff1a"}),"\n",(0,c.jsx)(n.h3,{id:"dpdk-mempool",children:"dpdk mempool"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"mempool\u57fa\u7840"}),"\n"]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"Mempool\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u5bf9\u8c61\u5206\u914d\u5668\u3002 \u5728DPDK\u4e2d\uff0c\u5b83\u7531\u540d\u79f0\u552f\u4e00\u6807\u8bc6\uff0c\u5e76\u4e14\u4f7f\u7528mempool\u64cd\u4f5c\u6765\u5b58\u50a8\u7a7a\u95f2\u5bf9\u8c61\u3002Mempool\u7684\u7ec4\u7ec7\u662f\u901a\u8fc7\u4e09\u4e2a\u90e8\u5206\u5b9e\u73b0\u7684\uff1a"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"mempool\u5bf9\u8c61\u8282\u70b9\uff1amempool\u7684\u5bf9\u8c61\u6302\u63a5\u5728 static struct rte_tailq_elem rte_mempool_tailq \u5168\u5c40\u961f\u5217\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u540d\u5b57\u8fdb\u884c\u552f\u4e00\u6807\u8bc6\u7b26\uff1b\u6b64\u961f\u5217\u53ea\u662fmempool\u7684\u4e00\u4e2a\u5bf9\u8c61\u6307\u793a\u7ed3\u6784\uff0c\u5e76\u4e0d\u662f\u5b9e\u9645\u7684\u5185\u5b58\u533a\uff1b"}),"\n",(0,c.jsx)(n.li,{children:"mempool\u5b9e\u9645\u5185\u5b58\u533a\uff1a struct rte_memzone \u662f\u5b9e\u9645\u5206\u914d\u7684\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\uff0c\u5b58\u50a8\u6240\u521b\u5efa\u7684mempool\u5bf9\u8c61\uff1b"}),"\n",(0,c.jsx)(n.li,{children:"ring\u65e0\u9501\u961f\u5217\uff1a\u4f5c\u4e3a\u4e00\u4e2a\u65e0\u9501\u73af\u5f62\u961f\u5217 struct rte_ring \uff0c\u5b58\u50a8\u7740mempool\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u63d0\u4f9b\u4e86\u65b9\u4fbf\u5b58\u53d6\u4f7f\u7528mempool\u7684\u7a7a\u95f4\u7684\u529e\u6cd5\u3002"}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.img,{src:"https://img2018.cnblogs.com/blog/1498062/201811/1498062-20181129111801483-1500753553.png",alt:""})}),"\n",(0,c.jsx)(n.p,{children:"mempool\u7684\u5bf9\u8c61\u901a\u8fc7\u4e0ering\u65e0\u9501\u961f\u5217\u5efa\u7acb\u5173\u8054\u65b9\u4fbf\u5b58\u53d6\uff1b\u540c\u65f6\uff0c\u4e3a\u4e86\u51cf\u5c11\u591a\u6838\u8bbf\u95ee\u9020\u6210\u7684\u51b2\u7a81\uff0c\u5f15\u5165\u4e86local_cache\u5bf9\u8c61\u7f13\u51b2\u533a\u3002\u8be5local_cache\u975e\u786c\u4ef6\u4e0a\u7684cache\uff0c\u800c\u662f\u4e3a\u4e86\u51cf\u5c11\u591a\u6838\u8bbf\u95eering\u9020\u6210\u7684\u4e34\u754c\u533a\u8bbf\u95ee\uff0ccoreX app\u4f1a\u4f18\u5148\u8bbf\u95ee\u8be5local_cache\u4e0a\u7684\u5bf9\u8c61\u3002\u5165\u961f\u7684\u65f6\u5019\u4f18\u5148\u5165local_cache\u4e2d\uff0c\u51fa\u961f\u7684\u65f6\u5019\u4f18\u5148\u4ecelocal_cache\u4e2d\u51fa\u961f\u3002"}),"\n"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"mempool\u521b\u5efa\u4f7f\u7528"}),"\n"]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"\u5148\u6ce8\u610f\u4e00\u4e0b rte_mempool_create \u7684\u53c2\u6570\u4e2d\u7684\u4e24\u4e2a mp_init  \u548c obj_init \uff0c\u524d\u8005\u8d1f\u8d23\u521d\u59cb\u5316mempool\u4e2d\u914d\u7f6e\u7684\u79c1\u6709\u53c2\u6570\uff0c\u5982\u5728\u6570\u636e\u5305\u4e2d\u52a0\u5165\u7684\u6211\u4eec\u81ea\u5df1\u7684\u79c1\u6709\u7ed3\u6784\uff1b\u540e\u8005\u8d1f\u8d23\u521d\u59cb\u5316\u6bcf\u4e2amempool\u5bf9\u8c61\u3002\u6211\u4eec\u7136\u540e\u6309\u7167mempool\u76843\u4e2a\u5173\u952e\u90e8\u5206\u5c55\u5f00\u8bf4\u660e\u3002"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"mempool\u5934\u7ed3\u6784\u7684\u521b\u5efa"}),"\n",(0,c.jsx)(n.p,{children:"mempool\u5934\u7ed3\u6784\u5305\u542b3\u4e2a\u90e8\u5206\uff1a struct rte_mempool \uff0c struct rte_mempool_cache \u548cmempool private\u3002\u521b\u5efa\u662f\u5728 rte_mempool_create_empty() \u4e2d\u5b8c\u6210\u7684\uff0c\u5148\u8fdb\u884c\u4e86\u5bf9\u9f50\u7684\u68c0\u67e5,\u7136\u540e\u4ecemempool\u961f\u5217\u4e2d\u53d6\u51fa\u5934\u8282\u70b9\uff0c\u6211\u4eec\u521b\u5efa\u7684mempool\u7ed3\u6784\u586b\u5145\u597d\uff0c\u5c31\u6302\u63a5\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u3002\u63a5\u4e0b\u6765\u505a\u4e00\u4e9b\u68c0\u67e5\u5de5\u4f5c\u548c\u521b\u5efaflag\u7684\u8bbe\u7f6e.rte_mempool_calc_obj_size() \u8ba1\u7b97\u4e86\u6bcf\u4e2aobj\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2aobj\u53c8\u662f\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\uff0cheader_size\u3001elt_size\u3001trailer_size\uff0c\u5373\u5934\uff0c\u6570\u636e\u533a\uff0c\u5c3e\u3002\u5728\u6ca1\u6709\u5f00\u542fRTE_LIBRTE_MEMPOOL_DEBUG\u8c03\u8bd5\u65f6\uff0c\u6ca1\u6709\u5c3e\u90e8\u5206\uff1b\u5934\u90e8\u5206\u7684\u7ed3\u6784\u4e3a\uff1a struct rte_mempool_objhdr \uff0c\u901a\u8fc7\u8fd9\u4e2a\u5934\u90e8\uff0cmempool\u4e2d\u7684obj\u90fd\u662f\u94fe\u63a5\u5230\u961f\u5217\u4e2d\u7684\uff0c\u6240\u4ee5\uff0c\u63d0\u4f9b\u4e86\u904d\u5386obj\u7684\u65b9\u5f0f\uff08\u5c3d\u7ba1\u5f88\u5c11\u8fd9\u4e48\u7528\uff09\u3002\u51fd\u6570\u8fd4\u56de\u6700\u540e\u8ba1\u7b97\u5bf9\u9f50\u540e\u7684obj\u7684\u5927\u5c0f\uff0c\u4e3a\u540e\u9762\u5206\u914d\u7a7a\u95f4\u63d0\u4f9b\u4f9d\u636e\u3002"}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"mempool\u5b9e\u9645\u7a7a\u95f4\u7684\u521b\u5efa"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u8fd9\u90e8\u5206\u7684\u521b\u5efa\u662f\u5728\u51fd\u6570 rte_mempool_populate_default(struct rte_mempool *mp) \u4e2d\u5b8c\u6210\u7684\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u9996\u5148\u8ba1\u7b97\u4e3a\u8fd9\u4e9b\u5143\u7d20\u9700\u8981\u5206\u914d\u591a\u5927\u7684\u7a7a\u95f4\uff0c rte_mempool_ops_calc_mem_size\uff08\uff09"}),"\n",(0,c.jsx)(n.p,{children:"\u63a5\u7740 rte_memzone_reserve_aligned\uff08\uff09 \u5206\u914d\u7a7a\u95f4\u3002\u628a\u5143\u7d20\u6dfb\u52a0\u5230mempool,\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u7533\u8bf7\u7684\u7a7a\u95f4\u5206\u7ed9\u6bcf\u4e2a\u5143\u7d20\u3002"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"ring\u7684\u521b\u5efa"}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["\u8f6c\u81ea",(0,c.jsx)(n.a,{href:"https://www.cnblogs.com/rex-2018-cloud/p/10039065.html",children:"DPDK-----\u5185\u5b58\u7ba1\u7406\u4e4bmempool"})]}),"\n"]}),"\n",(0,c.jsx)(n.h1,{id:"reference",children:"reference"}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://blog.csdn.net/the_dog_tail_grass/article/details/113603311",children:"https://blog.csdn.net/the_dog_tail_grass/article/details/113603311"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://blog.csdn.net/u010827484/article/details/103377792",children:"https://blog.csdn.net/u010827484/article/details/103377792"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://segmentfault.com/a/1190000019400426",children:"https://segmentfault.com/a/1190000019400426"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://www.cnblogs.com/rex-2018-cloud/p/10039065.html",children:"https://www.cnblogs.com/rex-2018-cloud/p/10039065.html"})}),"\n"]})]})}function _(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);