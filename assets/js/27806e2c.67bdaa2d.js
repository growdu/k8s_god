"use strict";(self.webpackChunkk_8_s_god=self.webpackChunkk_8_s_god||[]).push([[2668],{28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>r});var s=i(96540);const t={},c=s.createContext(t);function l(n){const e=s.useContext(c);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(c.Provider,{value:e},n.children)}},95318:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"linux/linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317","title":"linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317","description":"\u6df7\u6742\u8bbe\u5907","source":"@site/docs/linux/linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317.md","sourceDirName":"linux","slug":"/linux/linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317","permalink":"/blog/docs/linux/linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linux/linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"linux\u5185\u6838\u6a21\u5757\u6307\u5317","permalink":"/blog/docs/linux/linux\u5185\u6838\u6a21\u5757\u6307\u5317"},"next":{"title":"linux\u5de8\u9875\u5185\u5b58\u6307\u5317","permalink":"/blog/docs/linux/linux\u5de8\u9875\u5185\u5b58\u6307\u5317"}}');var t=i(74848),c=i(28453);const l={},r="linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317",d={},o=[{value:"\u6df7\u6742\u8bbe\u5907",id:"\u6df7\u6742\u8bbe\u5907",level:2},{value:"\u8bbe\u5907\u63cf\u8ff0",id:"\u8bbe\u5907\u63cf\u8ff0",level:3},{value:"\u8bbe\u5907\u6ce8\u518c",id:"\u8bbe\u5907\u6ce8\u518c",level:3},{value:"\u6837\u4f8b",id:"\u6837\u4f8b",level:3}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317",children:"linux\u5b57\u7b26\u8bbe\u5907\u6307\u5317"})}),"\n",(0,t.jsx)(e.h2,{id:"\u6df7\u6742\u8bbe\u5907",children:"\u6df7\u6742\u8bbe\u5907"}),"\n",(0,t.jsx)(e.p,{children:"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u5b58\u5728\u4e00\u7c7b\u5b57\u7b26\u8bbe\u5907\uff0c\u5b83\u4eec\u62e5\u6709\u76f8\u540c\u7684\u4e3b\u8bbe\u5907\u53f7\uff0810\uff09\uff0c\u4f46\u6b21\u8bbe\u5907\u53f7\u4e0d\u540c\uff0c\u6211\u4eec\u79f0\u8fd9\u7c7b\u8bbe\u5907\u4e3a\u6df7\u6742\u8bbe\u5907(miscdevice)\u3002\u6240\u6709\u7684\u6df7\u6742\u8bbe\u5907\u5f62\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u5bf9\u8bbe\u5907\u8bbf\u95ee\u65f6\u5185\u6838\u6839\u636e\u6b21\u8bbe\u5907\u53f7\u67e5\u627e\u5230\u76f8\u5e94\u7684\u6df7\u6742\u8bbe\u5907\u3002"}),"\n",(0,t.jsx)(e.h3,{id:"\u8bbe\u5907\u63cf\u8ff0",children:"\u8bbe\u5907\u63cf\u8ff0"}),"\n",(0,t.jsx)(e.p,{children:"Linux\u4e2d\u4f7f\u7528struct miscdevice\u6765\u63cf\u8ff0\u4e00\u4e2a\u6df7\u6742\u8bbe\u5907\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"struct miscdevice {\n\tint minor; /* \u6b21\u8bbe\u5907\u53f7*/\n\tconst char *name; /* \u8bbe\u5907\u540d*/\n\tconst struct file_operations *fops; /*\u6587\u4ef6\u64cd\u4f5c*/\n\tstruct list_head list;\n\tstruct device *parent;\n\tstruct device *this_device;\n};\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u8bbe\u5907\u6ce8\u518c",children:"\u8bbe\u5907\u6ce8\u518c"}),"\n",(0,t.jsx)(e.p,{children:"Linux\u4e2d\u4f7f\u7528misc_register\u51fd\u6570\u6765\u6ce8\u518c\u4e00\u4e2a\u6df7\u6742\u8bbe\u5907\u9a71\u52a8\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"int misc_register(struct miscdevice * misc)\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u6837\u4f8b",children:"\u6837\u4f8b"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"test_misc.c"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <linux/init.h>\n#include <linux/module.h>\n#include <linux/fs.h>       // struct file_operations\n#include <linux/cdev.h>     // struct cdev\n#include <linux/uaccess.h>\n#include <linux/device.h>\n#include <linux/semaphore.h>\n#include <linux/string.h>\n#include <linux/miscdevice.h>\n \n \nstatic int hello_open(struct inode *inode,\n                      struct file *file)\n{\n    printk("===[growdu]===[%s]===[%s]===\\n",__FILE__, __func__);\n    return 0;\n}\n \nstatic int hello_close(struct inode *inode,\n                        struct file *file)\n{\n    printk("===[growdu]===[%s]===[%s]===\\n",__FILE__, __func__);\n    return 0;\n}\n\nstatic ssize_t hello_read(struct file *file,\n                        char __user *buf,\n                        size_t count,\n                        loff_t *ppos)\n{\n    printk("Read my_read sucess!\\n");\n    int param = 500;\n    copy_to_user(buf, &param, 4);\n    return 0;\n}\n\n\n \n// \u5b9a\u4e49\u521d\u59cb\u5316LED\u7684\u786c\u4ef6\u64cd\u4f5c\u5bf9\u8c61\n// open,release\u4e00\u65e6\u52a0\u8f7d\u5185\u5b58\u4e2d\uff0c\u9759\u9759\u7b49\u5f85\u7740\u5e94\u7528\u7a0b\u5e8f\u6765\u8c03\u7528\nstatic struct file_operations hello_fops =\n{\n    .owner = THIS_MODULE,\n    .open = hello_open,     // \u6253\u5f00\u8bbe\u5907\n    .read = hello_read,\n    .release = hello_close  // \u5173\u95ed\u8bbe\u5907\n};\n \nstatic const char name[] = "test_misc";\n \n// \u5b9a\u4e49\u521d\u59cb\u5316\u6df7\u6742\u8bbe\u5907\u5bf9\u8c61\nstatic struct miscdevice hello_misc =\n{\n    .minor = MISC_DYNAMIC_MINOR,\n    .name = name,\n    .fops = &hello_fops\n};\n \nstatic int __init hello_init(void)\n{\n    int rc = -1;\n\t\n    printk("===[growdu]===[%s]===[%s]===[Hello !]===\\n",__FILE__, __func__);\n \n    rc = misc_register(&hello_misc); // \u6ce8\u518c\n    \n    if (rc != 0)\n    {\n        printk("===[growdu]===[%s]===[%s]===[misc_register error with %d]===\\n",__FILE__, __func__, rc);\n        return -1;\n    }\n\t\n    printk("===[growdu]===[%s]===[%s]===[name=%s, nodename = %s]===\\n",\n        __FILE__, __func__, name, hello_misc.nodename);\n \n    return 0;\n}\n \nstatic void __exit hello_exit(void)\n{\n    misc_deregister(&hello_misc); // \u5378\u8f7d\n    printk("===[growdu]===[%s]===[%s]===[Bye bye...]===\\n",__FILE__, __func__);\n}\n \n \nmodule_init(hello_init);\nmodule_exit(hello_exit);\n \nMODULE_DESCRIPTION("growdu: Driver for DEMO!");\nMODULE_AUTHOR("growdu");\nMODULE_LICENSE("GPL");\nMODULE_VERSION("V0.0.1");\n'})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"makefile"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-makefile",children:"obj-m := test_misc.o\nCURRENT_PATH := $(shell pwd)\nLINUX_KERNEL := $(shell uname -r)\nLINUX_KERNEL_PATH := /usr/src/kernels/$(LINUX_KERNEL)\nCONFIG_MODULE_SIG=n\nall:\n        $(MAKE) -C $(LINUX_KERNEL_PATH) M=$(CURRENT_PATH) modules\nclean:\n        rm *.ko\n        rm *.o\n"})}),"\n",(0,t.jsx)("font",{color:"red",children:"\u6ce8\u610f\uff1a\u82e5\u4e0d\u6dfb\u52a0CONFIG_MODULE_SIG=n\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u52a0\u8f7d\u5185\u6838\u6a21\u5757\u540e\u7b7e\u540d\u9519\u8bef\uff0c\u7136\u540e\u521b\u5efa\u8bbe\u5907\u5931\u8d25\u3002"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"test.c"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <sys/stat.h>\n#include <sys/types.h>\n#include <sys/ioctl.h>\n#include <fcntl.h>\n\nint main(char argc,char *argv[])\n{\n    int fd;\n    int cmd;\n    int param = 0;\n    if(argc < 2)\n    {\n        printf("please enter the second param!\\n");\n        return 0;   \n    }\n    cmd = atoi(argv[1]);\n    fd = open("/dev/test_misc",O_RDWR);\n    if(fd < 0)\n    {\n        printf("Open /dev/test_misc fail.\\n");\n    }\n\n    switch(cmd)\n    {\n        case 1:\n            printf("Second param is %c\\n",*argv[1]);\n            read(fd, &param, 4);\n            printf("Read Param is %d.\\n",param);\n            break;\n        default :\n            break;\n    }\n    close(fd);\n    return 0;\n}\n'})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"makefile"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-makefile",children:"gcc test.c\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u4ee3\u7801\u76ee\u5f55\u4e0b\u9762\u6267\u884c\u5982\u4e0b\u811a\u672c\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-shell",children:"# \u751f\u6210test_misc.ko\nmake\n# \u751f\u6210a.out\u8fdb\u884c\u6d4b\u8bd5\ngcc test.c\n# \u52a0\u8f7d\u6a21\u5757\ninsmod test_misc.ko\n# \u4f7f\u7528dmesg\u67e5\u770b\u5185\u6838\u662f\u5426\u6709\u9519\u8bef\u6253\u5370\ndmesg\n# \u82e5\u6b63\u5e38\u521b\u5efa\u4f1a\u5728/dev\u4e0b\u521b\u5efa\u5bf9\u5e94\u7684test_misc\u8bbe\u5907\nls /dev/test_misc\n# \u6d4b\u8bd5\n./a.out\n# \u5378\u8f7d\u6a21\u5757\n rmmod test_misc\n"})}),"\n",(0,t.jsx)(e.h1,{id:"reference",children:"reference"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.linuxidc.com/Linux/2016-02/128598.htm",children:"https://www.linuxidc.com/Linux/2016-02/128598.htm"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://blog.csdn.net/frodocheng/article/details/106846997",children:"https://blog.csdn.net/frodocheng/article/details/106846997"})}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}}}]);