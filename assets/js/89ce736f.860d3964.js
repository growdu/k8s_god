"use strict";(self.webpackChunkk_8_s_god=self.webpackChunkk_8_s_god||[]).push([[9144],{10328:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>a,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"cluster/C\u8bed\u8a00\u5b9e\u73b0\u5206\u5e03\u5f0f\u81ea\u589e\u6709\u5e8f\u7684\u552f\u4e00ID\u751f\u6210\u7b97\u6cd5-snowflake\u7b97\u6cd5","title":"C\u8bed\u8a00\u5b9e\u73b0\u5206\u5e03\u5f0f\u81ea\u589e\u6709\u5e8f\u7684\u552f\u4e00ID\u751f\u6210\u7b97\u6cd5-snowflake\u7b97\u6cd5","description":"\u4e4b\u524d\u6709\u4eba\u95ee\u6211\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u9012\u589e\u7684\u552f\u4e00id\u751f\u6210\u3002\u60f3\u4e86\u534a\u5929\u4e0d\u77e5\u9053\uff0c\u5076\u7136\u4e00\u4e2a\u540c\u4e8b\u8bf4\u8d77snowflake\u7b97\u6cd5\uff0c\u6211\u767e\u5ea6\u4e86\u4e00\u4e0b\uff0c\u5f88\u7b80\u5355\u9ad8\u6548\u3002","source":"@site/docs/cluster/C\u8bed\u8a00\u5b9e\u73b0\u5206\u5e03\u5f0f\u81ea\u589e\u6709\u5e8f\u7684\u552f\u4e00ID\u751f\u6210\u7b97\u6cd5-snowflake\u7b97\u6cd5.md","sourceDirName":"cluster","slug":"/cluster/C\u8bed\u8a00\u5b9e\u73b0\u5206\u5e03\u5f0f\u81ea\u589e\u6709\u5e8f\u7684\u552f\u4e00ID\u751f\u6210\u7b97\u6cd5-snowflake\u7b97\u6cd5","permalink":"/blog/docs/cluster/C\u8bed\u8a00\u5b9e\u73b0\u5206\u5e03\u5f0f\u81ea\u589e\u6709\u5e8f\u7684\u552f\u4e00ID\u751f\u6210\u7b97\u6cd5-snowflake\u7b97\u6cd5","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cluster/C\u8bed\u8a00\u5b9e\u73b0\u5206\u5e03\u5f0f\u81ea\u589e\u6709\u5e8f\u7684\u552f\u4e00ID\u751f\u6210\u7b97\u6cd5-snowflake\u7b97\u6cd5.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"newbing\u4f7f\u7528\u6559\u7a0b","permalink":"/blog/docs/chatgpt/newbing\u4f7f\u7528\u6559\u7a0b"},"next":{"title":"C\u8bed\u8a00\u96ea\u82b1\u7b97\u6cd5,\u8bb0\u4e00\u6b21\u96ea\u82b1\u7b97\u6cd5\u7684\u5b9e\u73b0","permalink":"/blog/docs/cluster/C\u8bed\u8a00\u96ea\u82b1\u7b97\u6cd5,\u8bb0\u4e00\u6b21\u96ea\u82b1\u7b97\u6cd5\u7684\u5b9e\u73b0"}}');var s=e(74848),o=e(28453);const r={},u=void 0,d={},c=[];function l(n){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"\u4e4b\u524d\u6709\u4eba\u95ee\u6211\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u9012\u589e\u7684\u552f\u4e00id\u751f\u6210\u3002\u60f3\u4e86\u534a\u5929\u4e0d\u77e5\u9053\uff0c\u5076\u7136\u4e00\u4e2a\u540c\u4e8b\u8bf4\u8d77snowflake\u7b97\u6cd5\uff0c\u6211\u767e\u5ea6\u4e86\u4e00\u4e0b\uff0c\u5f88\u7b80\u5355\u9ad8\u6548\u3002"}),"\n",(0,s.jsx)(t.p,{children:"\u53c2\u8003"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/twitter/snowflake",children:"https://github.com/twitter/snowflake"})}),"\n",(0,s.jsx)(t.p,{children:"\u4e8e\u662f\uff0c\u6211\u81ea\u5df1\u7528c\u8bed\u8a00\u968f\u4fbf\u5b9e\u73b0\u4e86\u4e00\u4e0b\uff0c\u8fd8\u6ca1\u6709\u8fbe\u5230\u5de5\u4e1a\u7ea7\u522b\uff0c\u9700\u8981\u7ec6\u5316\uff0c\u4f46\u662f\u57fa\u672c\u80fd\u7528\u4e86\uff0c\u4e0a\u4ee3\u7801\u3002"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'1.  /\\*\xa0\n2.  \xa0\xa0\xa0\xa0snowflake\xa0\n\n4.  \xa0\xa0\xa0\xa0ID\xa0\u751f\u6210\u7b56\u7565\xa0\n5.  \xa0\xa0\xa0\xa0\u6beb\u79d2\u7ea7\u65f6\u95f441\u4f4d+\u673a\u5668ID\xa010\u4f4d+\u6beb\u79d2\u5185\u5e8f\u521712\u4f4d\u3002\xa0\n6.  \xa0\xa0\xa0\xa00\xa041\xa051\xa064\xa0+-----------+------+------+\xa0|time\xa0|pc\xa0|inc\xa0|\xa0+-----------+------+------+\xa0\n7.  \xa0\xa0\xa0\xa0\u524d41bits\u662f\u4ee5\u5fae\u79d2\u4e3a\u5355\u4f4d\u7684timestamp\u3002\xa0\n8.  \xa0\xa0\xa0\xa0\u63a5\u774010bits\u662f\u4e8b\u5148\u914d\u7f6e\u597d\u7684\u673a\u5668ID\u3002\xa0\n9.  \xa0\xa0\xa0\xa0\u6700\u540e12bits\u662f\u7d2f\u52a0\u8ba1\u6570\u5668\u3002\xa0\n10.  \xa0\xa0\xa0\xa0macheine\xa0id(10bits)\u6807\u660e\u6700\u591a\u53ea\u80fd\u67091024\u53f0\u673a\u5668\u540c\u65f6\u4ea7\u751fID\uff0csequence\xa0number(12bits)\u4e5f\u6807\u660e1\u53f0\u673a\u56681ms\u4e2d\u6700\u591a\u4ea7\u751f4096\u4e2aID\uff0c\xa0\\*\xa0\n11.  \xa0\xa0\xa0\xa0\xa0\xa0\u6ce8\u610f\u70b9\uff0c\u56e0\u4e3a\u4f7f\u7528\u5230\u4f4d\u79fb\u8fd0\u7b97\uff0c\u6240\u4ee5\u9700\u898164\u4f4d\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u7136\u751f\u6210\u7684ID\u4f1a\u6709\u53ef\u80fd\u4e0d\u6b63\u786e\xa0\n12.  \\*/\xa0\xa0\n\n14.  #include\xa0<stdio.h>\xa0\xa0\n15.  #include\xa0<pthread.h>\xa0\xa0\n16.  #include\xa0<unistd.h>\xa0\xa0\n17.  #include\xa0<stdlib.h>\xa0\xa0\n18.  #include\xa0<sched.h>\xa0\xa0\n19.  #include\xa0<linux/unistd.h>\xa0\xa0\n20.  #include\xa0<sys/syscall.h>\xa0\xa0\n21.  #include\xa0<errno.h>\xa0\xa0\n22.  #include<linux/types.h>\xa0\xa0\n23.  #include<time.h>\xa0\xa0\n24.  #include\xa0<stdint.h>\xa0\xa0\n25.  #include\xa0<sys/time.h>\xa0\xa0\n\n27.  struct\xa0\xa0globle\xa0\xa0\n28.  {\xa0\xa0\n29.  \xa0\xa0\xa0\xa0int\xa0global\\_int:12;\xa0\xa0\n30.  \xa0\xa0\xa0\xa0uint64\\_t\xa0last\\_stamp;\xa0\xa0\n31.  \xa0\xa0\xa0\xa0int\xa0workid;\xa0\xa0\n32.  \xa0\xa0\xa0\xa0int\xa0seqid;\xa0\xa0\n33.  };\xa0\xa0\n\n35.  void\xa0set\\_workid(int\xa0workid);\xa0\xa0\n36.  pid\\_t\xa0gettid(\xa0void\xa0);\xa0\xa0\n37.  uint64\\_t\xa0get\\_curr\\_ms();\xa0\xa0\n38.  uint64\\_t\xa0wait\\_next\\_ms(uint64\\_t\xa0lastStamp);\xa0\xa0\n39.  int\xa0atomic\\_incr(int\xa0id);\xa0\xa0\n40.  uint64\\_t\xa0get\\_unique\\_id();\xa0\xa0\n\n  \n\n1.  #include\xa0"snowflake.h"\xa0\xa0\n\n3.  struct\xa0globle\xa0g\\_info;\xa0\xa0\n4.  #define\xa0\xa0\xa0sequenceMask\xa0\xa0(-1L\xa0^\xa0(-1L\xa0<<\xa012L))\xa0\xa0\n5.  void\xa0set\\_workid(int\xa0workid)\xa0\xa0\n6.  {\xa0\xa0\n7.  \xa0g\\_info.workid\xa0=\xa0workid;\xa0\xa0\n8.  }\xa0\xa0\n9.  pid\\_t\xa0gettid(\xa0void\xa0)\xa0\xa0\n10.  {\xa0\xa0\n11.  \xa0\xa0\xa0\xa0return\xa0syscall(\xa0\\_\\_NR\\_gettid\xa0);\xa0\xa0\n12.  }\xa0\xa0\n13.  uint64\\_t\xa0get\\_curr\\_ms()\xa0\xa0\n14.  {\xa0\xa0\n15.  \xa0\xa0\xa0\xa0struct\xa0timeval\xa0time\\_now;\xa0\xa0\n16.  \xa0\xa0\xa0\xa0gettimeofday(&time\\_now,NULL);\xa0\xa0\n17.  \xa0\xa0\xa0\xa0uint64\\_t\xa0ms\\_time\xa0=time\\_now.tv\\_sec\\*1000+time\\_now.tv\\_usec/1000;\xa0\xa0\n18.  \xa0\xa0\xa0\xa0return\xa0ms\\_time;\xa0\xa0\n19.  }\xa0\xa0\n\n21.  uint64\\_t\xa0wait\\_next\\_ms(uint64\\_t\xa0lastStamp)\xa0\xa0\n22.  {\xa0\xa0\n23.  \xa0\xa0\xa0\xa0uint64\\_t\xa0cur\xa0=\xa00;\xa0\xa0\n24.  \xa0\xa0\xa0\xa0do\xa0{\xa0\xa0\n25.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0cur\xa0=\xa0get\\_curr\\_ms();\xa0\xa0\n26.  \xa0\xa0\xa0\xa0}\xa0while\xa0(cur\xa0<=\xa0lastStamp);\xa0\xa0\n27.  \xa0\xa0\xa0\xa0return\xa0cur;\xa0\xa0\n28.  }\xa0\xa0\n29.  int\xa0atomic\\_incr(int\xa0id)\xa0\xa0\n30.  {\xa0\xa0\n31.  \xa0\xa0\xa0\xa0\\_\\_sync\\_add\\_and\\_fetch(\xa0&id,\xa01\xa0);\xa0\xa0\n32.  \xa0\xa0\xa0\xa0return\xa0id;\xa0\xa0\n33.  }\xa0\xa0\n34.  uint64\\_t\xa0get\\_unique\\_id()\xa0\xa0\n35.  {\xa0\xa0\n36.  \xa0\xa0\xa0\xa0uint64\\_t\xa0\xa0uniqueId=0;\xa0\xa0\n37.  \xa0\xa0\xa0\xa0uint64\\_t\xa0nowtime\xa0=\xa0get\\_curr\\_ms();\xa0\xa0\n38.  \xa0\xa0\xa0\xa0uniqueId\xa0=\xa0nowtime<<22;\xa0\xa0\n39.  \xa0\xa0\xa0\xa0uniqueId\xa0|=(g\\_info.workid&0x3ff)<<12;\xa0\xa0\n\n41.  \xa0\xa0\xa0\xa0if\xa0(nowtime\xa0<g\\_info.last\\_stamp)\xa0\xa0\n42.  \xa0\xa0\xa0\xa0{\xa0\xa0\n43.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0perror("error");\xa0\xa0\n44.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0exit(-1);\xa0\xa0\n45.  \xa0\xa0\xa0\xa0}\xa0\xa0\n46.  \xa0\xa0\xa0\xa0if\xa0(nowtime\xa0==\xa0g\\_info.last\\_stamp)\xa0\xa0\n47.  \xa0\xa0\xa0\xa0{\xa0\xa0\n48.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0g\\_info.seqid\xa0=\xa0atomic\\_incr(g\\_info.seqid)&\xa0sequenceMask;\xa0\xa0\n49.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if\xa0(g\\_info.seqid\xa0==0)\xa0\xa0\n50.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0{\xa0\xa0\n51.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0nowtime\xa0=\xa0wait\\_next\\_ms(g\\_info.last\\_stamp);\xa0\xa0\n52.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\n53.  \xa0\xa0\xa0\xa0}\xa0\xa0\n54.  \xa0\xa0\xa0\xa0else\xa0\xa0\n55.  \xa0\xa0\xa0\xa0{\xa0\xa0\n56.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0g\\_info.seqid\xa0\xa0=\xa00;\xa0\xa0\n57.  \xa0\xa0\xa0\xa0}\xa0\xa0\n58.  \xa0\xa0\xa0\xa0g\\_info.last\\_stamp\xa0=\xa0nowtime;\xa0\xa0\n59.  \xa0\xa0\xa0\xa0uniqueId\xa0|=g\\_info.seqid;\xa0\xa0\n60.  \xa0\xa0\xa0\xa0return\xa0uniqueId;\xa0\xa0\n61.  }\xa0\xa0\n62.  int\xa0main()\xa0\xa0\n63.  {\xa0\xa0\n64.  \xa0\xa0\xa0\xa0set\\_workid(100);\xa0\xa0\n65.  \xa0\xa0\xa0\xa0int\xa0size;\xa0\xa0\n66.  \xa0\xa0\xa0\xa0for\xa0(;;)\xa0\xa0\n67.  \xa0\xa0\xa0\xa0{\xa0\xa0\n68.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0uint64\\_t\xa0unquie\xa0=\xa0get\\_unique\\_id();\xa0\xa0\n69.  \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0printf("pthread\\_id:%u,\xa0id\xa0\\[%llu\\]\\\\n",gettid(),unquie);\xa0\xa0\n70.  \xa0\xa0\xa0\xa0}\xa0\xa0\n\n72.  \xa0\xa0\xa0\xa0return;\xa0\xa0\xa0\n73.  }\xa0\n\xa0```\n\n\u652f\u6301\u539f\u5b50\u81ea\u589e\u64cd\u4f5c\u3002\n\n\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06workid\u8fdb\u884c\u79fb\u4f4d\u52a0\u4e0a\u7ebf\u7a0bID\u3002\n'})})]})}function a(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},28453:(n,t,e)=>{e.d(t,{R:()=>r,x:()=>u});var i=e(96540);const s={},o=i.createContext(s);function r(n){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function u(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(o.Provider,{value:t},n.children)}}}]);