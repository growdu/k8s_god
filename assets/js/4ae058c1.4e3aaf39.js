"use strict";(self.webpackChunkk_8_s_god=self.webpackChunkk_8_s_god||[]).push([[8350],{25296:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"pgsql/replication/PostgreSQL\u590d\u5236\u69fd\u5b9e\u64cd","title":"PostgreSQL\u590d\u5236\u69fd\u5b9e\u64cd","description":"1\xa0\u5f15\u8a00","source":"@site/docs/pgsql/replication/PostgreSQL\u590d\u5236\u69fd\u5b9e\u64cd.md","sourceDirName":"pgsql/replication","slug":"/pgsql/replication/PostgreSQL\u590d\u5236\u69fd\u5b9e\u64cd","permalink":"/blog/docs/pgsql/replication/PostgreSQL\u590d\u5236\u69fd\u5b9e\u64cd","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pgsql/replication/PostgreSQL\u590d\u5236\u69fd\u5b9e\u64cd.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PostgreSQL \u540c\u6b65\u6d41\u590d\u5236\u539f\u7406\u548c\u4ee3\u7801\u6d45\u6790-\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a","permalink":"/blog/docs/pgsql/replication/PostgreSQL \u540c\u6b65\u6d41\u590d\u5236\u539f\u7406\u548c\u4ee3\u7801\u6d45\u6790-\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a"},"next":{"title":"PostgreSQL\u6570\u636e\u5e93\u590d\u5236\u2014\u2014\u540e\u53f0\u4e00\u7b49\u516c\u6c11\u8fdb\u7a0bWalReceiver&startup\u4ea4\u4e92_postgressql walreceive\u7ebf\u7a0b_\u80a5\u53d4\u83cc\u7684\u535a\u5ba2-CSDN\u535a\u5ba2","permalink":"/blog/docs/pgsql/replication/PostgreSQL\u6570\u636e\u5e93\u590d\u5236\u2014\u2014\u540e\u53f0\u4e00\u7b49\u516c\u6c11\u8fdb\u7a0bWalReceiver&startup\u4ea4\u4e92_postgressql walreceive\u7ebf\u7a0b_\u80a5\u53d4\u83cc\u7684\u535a\u5ba2-CSDN\u535a\u5ba2"}}');var r=s(74848),l=s(28453);const i={},c=void 0,d={},a=[{value:"1\xa0<strong>\u5f15\u8a00</strong>",id:"1\u5f15\u8a00",level:2},{value:"3\xa0<strong>\u4e3a\u5565\u8981\u8bbe\u590d\u5236\u69fd</strong>",id:"3\u4e3a\u5565\u8981\u8bbe\u590d\u5236\u69fd",level:2},{value:"4\xa0<strong>\u5b9e\u6218\u6f14\u793a</strong>",id:"4\u5b9e\u6218\u6f14\u793a",level:2},{value:"4.1\xa0hot_standby_feedback",id:"41hot_standby_feedback",level:2},{value:"4.2\xa0restart_lsn",id:"42restart_lsn",level:2},{value:"5\xa0<strong>\u7ed3\u8bba</strong>",id:"5\u7ed3\u8bba",level:2}];function p(e){const n={h2:"h2",img:"img",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"1\u5f15\u8a00",children:["1\xa0",(0,r.jsx)(n.strong,{children:"\u5f15\u8a00"})]}),"\n",(0,r.jsx)(n.p,{children:"\u770b\u4e0b\u5b98\u7f51\u7684\u89e3\u91ca\uff0c\u590d\u5236\u69fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u529e\u6cd5\u786e\u4fdd\u4e3b\u5e93\u4e0d\u4f1a\u201c\u5220\u9664\u201d\u8fd8\u672a\u53d1\u9001\u5230\u5907\u5e93\u7684WAL\u65e5\u5fd7\uff0c\u4e5f\u4e0d\u4f1a\u5220\u9664\u5907\u5e93\u9700\u8981\u7684\u591a\u7248\u672c\uff0c\u5373\u4f7f\u5907\u5e93\u6389\u7ebf\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["2\xa0",(0,r.jsx)(n.strong,{children:"\u76f8\u5173\u53c2\u6570"})]}),"\n",(0,r.jsx)(n.p,{children:"wal_keep_segments\uff1a\u8bbe\u7f6e\u4e3a\u8f83\u5927\u503c\uff0c\u4fdd\u8bc1pg_wal\u76ee\u5f55\u4e0b\u4fdd\u7559\u8f83\u591a\u7684wal\u65e5\u5fd7\uff0c\u4e3b\u5e93\u4e0awal\u65e5\u5fd7\u7559\u5b58\u8d8a\u591a\uff0c\u5141\u8bb8\u5907\u5e93\u5b95\u673a\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u8bbe\u7f6e\u6b64\u53c2\u6570\u9700\u8981\u6ce8\u610f\u4e0d\u8981\u5c06pg_wal\u76ee\u5f55\u6491\u6ee1\u3002\u6216\u8005\u5728\u4e3b\u5e93\u4e0a\u5f00\u542f\u5f52\u6863\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u786c\u76d8\u7a7a\u95f4\u4fdd\u7559wal\u5f52\u6863\uff0c\u81f3\u5c11\u5728\u5907\u5e93\u505c\u673a\u7ef4\u62a4\u65f6\u4e34\u65f6\u5f00\u542f\u4e3b\u5e93\u5f52\u6863\u3002\u5982\u679c\u5907\u5e93\u843d\u540e\u4e3b\u5e93wal_keep_segments\u6570\u91cf\u7684wal\uff0c\u5219\u4e3b\u5e93\u53ef\u80fd\u4f1a\u5220\u9664\u5907\u7528\u670d\u52a1\u5668\u4ecd\u9700\u8981\u7684wal\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d41\u590d\u5236\u5c31\u4f1a\u4e2d\u65ad\u3002"}),"\n",(0,r.jsx)(n.p,{children:"hot_standby_feedback\uff1a\u5907\u5e93\u5b9a\u65f6\u5c06\u6700\u5c0f\u6d3b\u8dc3\u4e8b\u52a1ID(xmin)\u544a\u8bc9master\uff0c\u4f7f\u5f97 master\u5728\u6267\u884cvacuum\xa0\u65f6\u5bf9\u5907\u5e93\u8fd8\u9700\u8981\u7684tuple\u624b\u4e0b\u7559\u60c5\uff0c\u4f46\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e3b\u5e93\u81a8\u80c0\uff0c\u5728\u6bcf\u4e2awal_receiver_status_interval\u5b9a\u4e49\u7684\u5468\u671f\u5185\u53d1\u9001\u7684\u9891\u7387\u4e0d\u8d85\u8fc7\u4e00\u6b21\uff0c\u5e76\u4e14\u6b64\u8bbe\u7f6e\u4e0d\u4f1a\u8986\u76d6\u5728\u4e3b\u6570\u636e\u5e93\u4e0a\u7684old_snapshot_threshold\u884c\u4e3a\u3002"}),"\n",(0,r.jsx)(n.p,{children:"max_standby_streaming_delay\uff1a\u901a\u5e38\u4f1a\u5c06\u4e00\u4e9b\u6267\u884c\u65f6\u95f4\u8f83\u957f\u7684\u5206\u6790\u4efb\u52a1\u3001\u7edf\u8ba1SQL\u8dd1\u5728\u5907\u5e93\u4e0a\u3002\u5728\u5907\u5e93\u4e0a\u6267\u884c\u957f\u65f6\u95f4\u7684\u67e5\u8be2\uff0c\u7531\u4e8e\u6d89\u53ca\u7684\u8bb0\u5f55\u6709\u53ef\u80fd\u5728\u4e3b\u5e93\u4e0a\u88ab\u66f4\u65b0\u6216\u5220\u9664\uff0c\u4e3b\u5e93\u4e0a\u5bf9\u66f4\u65b0\u6216\u5220\u9664\u6570\u636e\u7684\u8001\u7248\u672c\u8fdb\u884cvacuum\u540e\uff0c\u4ece\u5e93\u4e0a\u4e5f\u4f1a\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u4ece\u800c\u4e0e\u4ece\u5e93\u4e0a\u7684\u5f53\u524d\u67e5\u8be2\u4ea7\u751f\u51b2\u7a81\u3002\u6b64\u53c2\u6570\u9ed8\u8ba4\u4e3a30s\uff0c\u5f53\u5907\u5e93\u6267\u884cSQL\u65f6\uff0c\u6709\u53ef\u80fd\u4e0e\u6b63\u5728\u5e94\u7528\u7684WAL\u53d1\u751f\u51b2\u7a81\uff0c\u6b64\u67e5\u8be2\u5982\u679c30s\u6ca1\u6709\u6267\u884c\u5b8c\u5c31\u88ab\u4e2d\u6b62\uff0c\u6ce8\u610f30s\u4e0d\u662f\u5907\u5e93\u4e0a\u5355\u4e2a\u67e5\u8be2\u5141\u8bb8\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4\uff0c\u662f\u6307\u5f53\u5907\u5e93\u4e0a\u5e94\u7528WAL\u65f6\u5141\u8bb8\u7684\u6700\u5927WAL\u5ef6\u8fdf\u5e94\u7528\u65f6\u95f4\uff0c\u56e0\u6b64\u5907\u5e93\u4e0a\u67e5\u8be2\u7684\u6267\u884c\u65f6\u95f4\u6709\u53ef\u80fd\u4e0d\u5230\u8fd9\u4e2a\u503c\u5c31\u88ab\u4e2d\u6b62\u4e86\uff0c\u6b64\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a-1\uff0c\u8868\u793a\u5f53\u4ece\u5e93\u4e0a\u7684WAL\u5e94\u7528\u8fdb\u7a0b\u4e0e\u4ece\u5e93\u4e0a\u6267\u884c\u7684\u67e5\u8be2\u51b2\u7a81\u65f6\uff0cWAL\u5e94\u7528\u8fdb\u7a0b\u4e00\u76f4\u7b49\u5f85\u76f4\u5230\u4ece\u5e93\u67e5\u8be2\u6267\u884c\u5b8c\u6210\u3002"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://mmbiz.qpic.cn/mmbiz_png/lniadOK6Dzb4Js6Vbw6iaPTWIAUEnmOF4r1RCgMqbobL8nskaNo1Ox1lh3IKZeialGrNjdKdwicG9vkEJQryl9f5Cg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"\u56fe\u7247"})}),"\n",(0,r.jsx)(n.p,{children:"old_snapshot_threshold\uff1a\u5355\u4f4d\u4e3amin\uff0c\u6700\u5927\u53ef\u4ee5\u8bbe\u7f6e\u4e3a60\u5929\uff0c\u5f53vacuum\u56de\u6536\u5783\u573e\u65f6\uff0c\u9047\u5230\u5783\u573e\u8bb0\u5f55\u7684xmax\u5927\u4e8e\u6570\u636e\u5e93\u4e2d\u73b0\u5b58\u7684\u6700\u65e9\u672a\u63d0\u4ea4\u4e8b\u52a1xmin\u65f6\uff0c\u4e0d\u4f1a\u5bf9\u5176\u8fdb\u884c\u56de\u6536\u3002\u56e0\u6b64\u5f53\u6570\u636e\u5e93\u4e2d\u5b58\u5728\u5f88\u4e45\u4e3a\u7ed3\u675f\u7684\u4e8b\u52a1\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u5e93\u81a8\u80c0\u3002\u6b64\u53c2\u6570\u4ee3\u8868\u5f3a\u5236\u5220\u9664\u4e3a\u8fc7\u8001\u7684\u4e8b\u52a1\u5feb\u7167\u4fdd\u7559\u7684\u6b7b\u5143\u7ec4\u3002\u8fd9\u4f1a\u5bfc\u81f4\u957f\u4e8b\u52a1\u8bfb\u53d6\u5df2\u88ab\u5220\u9664\u7684tuple\u65f6\u51fa\u9519\u3002"}),"\n",(0,r.jsx)(n.p,{children:"vacuum_defer_cleanup_age\uff1a\u6307\u5b9avacuum\u5ef6\u8fdf\u6e05\u7406\u6b7b\u4ea1\u5143\u7ec4\u7684\u4e8b\u52a1\u6570\uff0cvacuum\u4f1a\u5ef6\u8fdf\u6e05\u9664\u65e0\u6548\u7684\u8bb0\u5f55\uff0c\u5ef6\u8fdf\u7684\u4e8b\u52a1\u4e2a\u6570\u901a\u8fc7vacuum_defer_cleanup_age\u8fdb\u884c\u8bbe\u7f6e\u3002\u9ed8\u8ba4\u4e3a0\uff0c\u5728\u4e3b\u5e93\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u7a0d\u5927\u7684\u503c\u4e5f\u53ef\u4ee5\u51cf\u5c11\u51b2\u7a81\u7684\u53d1\u751f\uff0c\u4f46\u662f\u5e76\u4e0d\u592a\u597d\u8ba1\u91cf\u3002"}),"\n",(0,r.jsx)(n.p,{children:"max_standby_archive_delay\uff1a\u5907\u673a\u56e0\u4e3a\u5904\u7406\u5f52\u6863\u7684wal\u65e5\u5fd7\u4ea7\u751f\u67e5\u8be2\u51b2\u7a81\u800c\u53d6\u6d88\u67e5\u8be2\u4e4b\u524d\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u548c\u4e0a\u9762\u7684\u53c2\u6570\u7c7b\u4f3c\u3002"}),"\n",(0,r.jsx)(n.p,{children:"recovery_min_apply_delay\uff1a\u5ef6\u8fdf\u5907\u5e93\u8bbe\u7f6e\u5907\u5e93\u5ef6\u8fdf\u91cd\u505aWAL\u7684\u65f6\u95f4\uff0c\u800c\u5907\u5e93\u4f9d\u7136\u53ca\u65f6\u63a5\u6536\u4e3b\u5e93\u53d1\u9001\u7684WAL\u65e5\u5fd7\u6d41\uff0c\u53ea\u662f\u4e0d\u662f\u4e00\u63a5\u6536\u5230WAL\u540e\u5c31\u7acb\u5373\u5e94\u7528\uff0c\u800c\u662f\u7b49\u5f85\u6b64\u53c2\u6570\u8bbe\u7f6e\u7684\u503c\u518d\u5e94\u7528\u3002\u4f7f\u7528\u6b64\u529f\u80fd\u5c06\u5ef6\u8fdfhot_standby_feedback\uff0c\u5f53synchronous_commit\u8bbe\u7f6e\u4e3aremote_apply\u65f6\uff0c\u540c\u6b65\u590d\u5236\u4e5f\u4f1a\u53d7\u6b64\u8bbe\u7f6e\u7684\u5f71\u54cd\uff0c\u6bcf\u4e2acommit\u90fd\u9700\u8981\u7b49\u5f85\u3002"}),"\n",(0,r.jsxs)(n.h2,{id:"3\u4e3a\u5565\u8981\u8bbe\u590d\u5236\u69fd",children:["3\xa0",(0,r.jsx)(n.strong,{children:"\u4e3a\u5565\u8981\u8bbe\u590d\u5236\u69fd"})]}),"\n",(0,r.jsx)(n.p,{children:"\u524d\u9762\u6240\u8bf4\u7684\u90a3\u4e48\u591a\u53c2\u6570\uff0c\u53ea\u6709\u5728\u4e3b\u5907\u5173\u7cfb\u6b63\u5e38\u65f6\u624d\u80fd\u8d77\u5230\u4f5c\u7528\uff0c\u800creplication slot\u80fd\u591f\u786e\u4fdd\u5728\u4e3b\u5907\u65ad\u8fde\u540e\u4e3b\u5e93\u7684wal\u4ecd\u4e0d\u88ab\u6e05\u7406\uff0c\u56e0\u4e3areplication slot\u7684\u72b6\u6001\u4fe1\u606f\u662f\u6301\u4e45\u5316\u4fdd\u5b58\u7684\uff0c\u5373\u4fbf\u4ece\u5e93\u65ad\u6389\u6216\u4e3b\u5e93\u91cd\u542f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4ecd\u7136\u4e0d\u4f1a\u4e22\u6389\u6216\u5931\u6548\u3002"}),"\n",(0,r.jsx)(n.p,{children:"replication slots \u662f\u4ecepostgresql 9.4\u5f15\u5165\u7684\uff0c\u4e3b\u8981\u662f\u63d0\u4f9b\u4e86\u4e00\u79cd\u81ea\u52a8\u5316\u7684\u65b9\u6cd5\u6765\u786e\u4fdd\u4e3b\u5e93\u5728\u6240\u6709\u7684\u5907\u5e93\u6536\u5230wal\u4e4b\u524d\u4e0d\u4f1a\u79fb\u9664\u5b83\u4eec\uff0c\u5e76\u4e14\u4e3b\u5e93\u4e5f\u4e0d\u4f1a\u79fb\u9664\u53ef\u80fd\u5bfc\u81f4\u6062\u590d\u51b2\u7a81\u7684\u884c(\u9700\u8981\u914d\u5408hot_standby_feedback)\uff0c\u5373\u4f7f\u5907\u5e93\u65ad\u5f00\u4e5f\u662f\u5982\u6b64\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u6ca1\u6709\u542f\u7528replication slots\u7684\u73af\u5883\u4e2d\uff0c\u5982\u679c\u78b0\u5230 ERROR: requested WAL segment xxxx has already been removed \u7684\u9519\u8bef\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u8981\u4e48\u63d0\u524d\u5f00\u542f\u4e86\u5f52\u6863\uff0c\u8981\u4e48\u91cd\u505aslave\uff0c\u53e6\u5916\u8fd8\u53ef\u4ee5\u5728\u4e3b\u5e93\u4e0a\u8bbe\u7f6e wal_keep_segments \u4e3a\u66f4\u5927\u7684\u503c\u3002\u5f53\u7136\uff0c\u5982\u679c\u5907\u5e93\u505c\u673a\u65f6\u95f4\u592a\u957f\uff0c\u53ef\u80fd\u4e3b\u5e93\u7684WAL\u65e5\u5fd7\u76ee\u5f55\u4f1a\u88ab\u6491\u6ee1\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u590d\u5236\u69fd\uff0c\u5efa\u8bae\u5c06WAL\u65e5\u5fd7\u76ee\u5f55\u653e\u5728\u5927\u5bb9\u91cf\u786c\u76d8\u4e0a\u3002"}),"\n",(0,r.jsxs)(n.h2,{id:"4\u5b9e\u6218\u6f14\u793a",children:["4\xa0",(0,r.jsx)(n.strong,{children:"\u5b9e\u6218\u6f14\u793a"})]}),"\n",(0,r.jsx)(n.h2,{id:"41hot_standby_feedback",children:"4.1\xa0hot_standby_feedback"}),"\n",(0,r.jsx)(n.p,{children:"\u6d41\u590d\u5236\u642d\u5efa\u5c31\u4e0d\u6f14\u793a\u4e86\uff0c\u6b64\u5904\u57fa\u4e8ePostgreSQL12\u642d\u5efa\u7684\uff0c\u5728\u6b64\u5c31\u4e0d\u518d\u8d58\u8ff0\uff0c\u53ea\u662f\u8981\u6ce8\u610f\u539f\u6709\u7684recovery.conf\u6ca1\u6709\u4e86\uff0c\u5408\u5230\u4e86postgresql.conf\u91cc\u9762\u3002"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select usename,client_addr,backend_xmin,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0usename \xa0| \xa0\xa0client_addr \xa0\xa0| backend_xmin | sync_state"}),"\n",(0,r.jsx)(n.p,{children:"----------+-----------------+--------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0postgres | 192.168.211.166 | \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| sync"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"\u6211\u628ahot_standby_feedback\u4e3b\u4ece\u90fd\u8bbe\u4e3a\u4e86off\uff0c\u67e5\u8be2pg_replication_slots\u53ef\u4ee5\u770b\u5230xmin\u4e3a\u7a7a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select * from pg_replication_slots ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot_name | plugin | slot_type | datoid | database | temporary | active | active_pid | xmin\xa0| catalog_xmin | restart_lsn | confirmed_flush_lsn"}),"\n",(0,r.jsx)(n.p,{children:"-----------+--------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot1 \xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0| physical \xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| f \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| t \xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa03743 | \xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| 4/38A410E0 \xa0|"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"\u6a21\u62df\u4e00\u4e0b\u51b2\u7a81\u7684\u53d1\u751f\uff0c\u5148\u521b\u5efa\u4e00\u5f20\u6d4b\u8bd5\u8868test\uff0c\u63d2\u51654\u5343\u4e07\u6570\u636e\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# insert into test values(generate_series(1,40000000));"}),"\n",(0,r.jsx)(n.p,{children:"INSERT 0 40000000"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# analyze test;"}),"\n",(0,r.jsx)(n.p,{children:"ANALYZE"}),"\n",(0,r.jsx)(n.p,{children:"\u5907\u5e93\u4e0a\u6267\u884c\u4e00\u4e0b\u67e5\u8be2\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# show hot_standby_feedback ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0hot_standby_feedback"}),"\n",(0,r.jsx)(n.p,{children:"----------------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0off"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select count(*) from test where id = 6666666;"}),"\n",(0,r.jsx)(n.p,{children:"\u6b64\u5904\u592f\u4f4f..."}),"\n",(0,r.jsx)(n.p,{children:"\u4e3b\u5e93\u4e0a\u5220\u9664id\u4e3a6666666\u7684\u6570\u636e\uff0c\u7136\u540e\u505a\u4e00\u4e0bvacuum\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# delete from test where id = 6666666;"}),"\n",(0,r.jsx)(n.p,{children:"DELETE 2"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# vacuum test;"}),"\n",(0,r.jsx)(n.p,{children:"VACUUM"}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u65f6\u5019\u518d\u53bb\u5907\u5e93\u4e0a\uff0c\u67e5\u8be2\u4f1a\u62a5\u9519\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select count(*) from test where id = 6666666;"}),"\n",(0,r.jsx)(n.p,{children:"FATAL: \xa0terminating connection due to conflict with recovery"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0User query might have needed to see row versions that must be removed."}),"\n",(0,r.jsx)(n.p,{children:"HINT: \xa0In a moment you should be able to reconnect to the database and repeat your command."}),"\n",(0,r.jsx)(n.p,{children:"ERROR: \xa0canceling statement due to conflict with recovery"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0User query might have needed to see row versions that must be removed."}),"\n",(0,r.jsx)(n.p,{children:"\u770b\u4e0bvacuum\u91cc\u7684\u903b\u8f91\uff0c"}),"\n",(0,r.jsx)(n.p,{children:"/*"}),"\n",(0,r.jsx)(n.p,{children:"\xa0* Deleter committed, but perhaps it was recent enough that some open"}),"\n",(0,r.jsx)(n.p,{children:"\xa0* transactions could still see the tuple."}),"\n",(0,r.jsx)(n.p,{children:"\xa0*/"}),"\n",(0,r.jsx)(n.p,{children:"if (!TransactionIdPrecedes(HeapTupleHeaderGetRawXmax(tuple), OldestXmin))"}),"\n",(0,r.jsx)(n.p,{children:"return HEAPTUPLE_RECENTLY_DEAD;"}),"\n",(0,r.jsx)(n.p,{children:"/* Otherwise, it's dead and removable */"}),"\n",(0,r.jsx)(n.p,{children:"return HEAPTUPLE_DEAD;"}),"\n",(0,r.jsx)(n.p,{children:"}"}),"\n",(0,r.jsx)(n.p,{children:"\u8be5\u51fd\u6570\u8ba1\u7b97\u5f53\u524dtuple\u7684xmax\u662f\u5426\u5927\u4e8e\u6216\u7b49\u4e8eOldestXmin\u3002xmax\u662f\u5220\u9664\u8fd9\u4e2atuple\u7684\u4e8b\u52a1ID\uff0c\u800cOldestXmin\u7531GetOldestXmin\u51fd\u6570\u8ba1\u7b97\uff0c\u662f\u6240\u6709\u6d3b\u8dc3\u4e8b\u52a1\u7684ID\uff0c\u4ee5\u53ca\u6240\u6709\u4e8b\u52a1\u7684xmin \u7ec4\u6210\u7684\u96c6\u5408\u4e2d\u6700\u5c0f\u7684\u4e8b\u52a1ID\u3002\u6240\u6709ID\u5927\u4e8e\u8fd9\u4e2aOldestXmin\u7684\u4e8b\u52a1\uff0c\u90fd\u662f\u201c\u65b0\u8fd1\u201d\u5f00\u542f\u7684\u4e8b\u52a1\uff0c\u5176\u4ed6\u4e8b\u52a1\u53ef\u80fd\u9700\u8981\u8bfb\u53d6\u8fd9\u4e2a\u65e7\u7248\u672c\u7528\u4e8e\u67e5\u8be2\uff0c\u6240\u4ee5\u4e0d\u80fd\u7269\u7406\u5220\u9664\uff0c\u5219\u8fd4\u56deHEAPTUPLE_RECENTLY_DEAD\uff0c\u4fdd\u7559\u6b64tuple\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4ea7\u751f\u5783\u573etuple\u7684\u4e8b\u52a1\u53f7\uff0c\u901a\u5e38\u5728\u4e3a\u5783\u573etuple\u7684\u5934\u4fe1\u606f\u4e2d\u7684xmax\u7248\u672c\u53f7\u5927\u4e8e\u6216\u7b49\u4e8evacuum\u5f00\u542f\u65f6\u6570\u636e\u5e93\u4e2d\u6700\u5c0f\u7684(backend_xmin, backend_xid)\uff0c\u8fd9\u6761\u5783\u573etuple\u5c31\u4e0d\u80fd\u88ab\u56de\u6536\uff0c\u6211\u4eec\u53ef\u4ee5\u5728pg_stat_activity\u89c6\u56fe\u4e2d\u770b\u5230\u8fd9\u4e24\u5217\uff0c"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# \\d pg_stat_activity"}),"\n",(0,r.jsx)(n.p,{children:'\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0View "pg_catalog.pg_stat_activity"'}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0\xa0\xa0\xa0Column \xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0Type \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| Collation | Nullable | Default"}),"\n",(0,r.jsx)(n.p,{children:"------------------+--------------------------+-----------+----------+---------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0backend_xid \xa0\xa0\xa0\xa0\xa0| xid \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0|"}),"\n",(0,r.jsx)(n.p,{children:"\xa0backend_xmin \xa0\xa0\xa0\xa0| xid \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0|"}),"\n",(0,r.jsx)(n.p,{children:"\u5bf9\u4e8erepeatable read\u4e0eserializable\u9694\u79bb\u7ea7\u522b\u7684\u4e8b\u52a1\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u67e5\u8be2\u5f00\u59cb\u65f6\u9700\u8981\u83b7\u53d6\u4e00\u4e2a\u5feb\u7167\uff0c\u5bf9\u4e8eread committed\u9694\u79bb\u7ea7\u522b\u7684\u4e8b\u52a1\u6765\u8bf4\uff0c\u4e8b\u52a1\u4e2d\u6bcf\u6761\u67e5\u8be2\u5f00\u59cb\u90fd\u4f1a\u91cd\u65b0\u83b7\u53d6\u4e00\u4e2a\u5feb\u7167\uff0c\u5feb\u7167\u4e2d\u5c06\u5305\u542b\u4e00\u4e2axmin\u503c\uff0c\u8868\u793a\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u6700\u5c0f\u7684\u6b63\u5728\u8fd0\u884c\u7684\u4e8b\u52a1\u53f7\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u4e3a\u6700\u5c0f\u672a\u5206\u914d\u4e8b\u52a1\u53f7\u3002\u5feb\u7167xmin\u4e0e\u4e8b\u52a1\u7533\u8bf7\u7684\u4e8b\u52a1\u53f7\u6709\u522b\uff0cxid\u8868\u793a\u8be5\u4e8b\u52a1\u7533\u8bf7\u7684\u4e8b\u52a1\u53f7\u3002PostgreSQL9.6\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7old_snapshot_threshold\u6765\u5f3a\u5236\u5220\u9664\u4e3a\u8fc7\u8001\u7684\u4e8b\u52a1\u5feb\u7167\u4fdd\u7559\u7684\u6b7b\u5143\u7ec4\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u4e86\u89e3\u4e86vacuum\u7684\u903b\u8f91\u540e\uff0c\u6211\u4eec\u77e5\u9053\u5047\u5982session 1\u67e5\u8be2\u67d0\u884c\u6570\u636e\uff0csession 2\u5220\u9664\u8be5\u6570\u636e\uff0c\u7136\u540ecommit\uff0c\u6267\u884c\u4e00\u6b21vacuum\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u6b21vacuum\u5e76\u4e0d\u4f1a\u5220\u9664\u8be5\u884c\u6570\u636e\uff0c\u56e0\u4e3asession 1\u7684\u4e8b\u52a1\u8fd8\u9700\u8981\u4f7f\u7528\u8be5\u5143\u7ec4\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6e05\u7406\u8be5\u5143\u7ec4\u3002\u90a3\u4e48\u5982\u679c\u662f\u4e3b\u4ece\u5462\uff1f\u4e3b\u5e93\u5728\u51c6\u5907\u8fdb\u884cvacuum\u65f6\u600e\u4e48\u77e5\u9053\u4ece\u5e93\u8fd8\u5728\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u5c31\u662fhot_standby_feedback\u7684\u610f\u4e49\uff0c\u8bbe\u7f6ehot_standby_feedback\u53c2\u6570\u4e4b\u540e\u5907\u5e93\u4f1a\u5b9a\u671f\u5411\u4e3b\u5e93\u901a\u77e5\u6700\u5c0f\u6d3b\u8dc3\u4e8b\u52a1id(xmin)\uff0c\u8fd9\u6837\u4f7f\u5f97\u4e3b\u5e93vacuum\u8fdb\u7a0b\u4e0d\u4f1a\u6e05\u7406\u5927\u4e8exmin\u503c\u7684\u4e8b\u52a1\u3002\u4f46\u662f\u5047\u5982\u4e3b\u5907\u4e4b\u95f4\u7684\u7f51\u7edc\u7a81\u7136\u4e2d\u65ad\uff0c\u5907\u5e93\u5c31\u65e0\u6cd5\u5411\u4e3b\u5e93\u6b63\u5e38\u53d1\u9001xmin\u503c\uff0c\u5982\u679c\u65f6\u95f4\u591f\u957f\uff0c\u4e3b\u5e93\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u8fd8\u662f\u4f1a\u6e05\u7406\u65e0\u7528\u5143\u7ec4\uff0c\u8fd9\u6837\u7f51\u7edc\u6062\u590d\u540e\u5c31\u53ef\u80fd\u53d1\u751f\u4e0a\u9762\u7684\u51b2\u7a81ERROR\uff1acanceling statement due to confilct with recovery\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u628a\u4e3b\u4ece\u7684hot_standby_feedback\u90fd\u8bbe\u4e3aon\uff0c\u518d\u6765\u6a21\u62df\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230pg_replication_slots\u7684xmin\u4e00\u5217\u6709\u503c\u4e86\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select * from pg_replication_slots ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot_name | plugin | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn"}),"\n",(0,r.jsx)(n.p,{children:"-----------+--------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot1 \xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0| physical \xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| f \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| t \xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa04034 | \xa0532\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| 4/38A51988 \xa0|"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"\u6062\u590d\u4e00\u4e0b\u73af\u5883\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# drop table test;"}),"\n",(0,r.jsx)(n.p,{children:"DROP TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test(id int);"}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# insert into test values(generate_series(1,40000000));"}),"\n",(0,r.jsx)(n.p,{children:"INSERT 0 40000000"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# analyze test;"}),"\n",(0,r.jsx)(n.p,{children:"ANALYZE"}),"\n",(0,r.jsx)(n.p,{children:"\u5907\u5e93\u4e0a\u6267\u884c\u4e00\u4e0b\u67e5\u8be2\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select count(*) from test where id = 6666666;"}),"\n",(0,r.jsx)(n.p,{children:"\u6b64\u5904\u592f\u4f4f..."}),"\n",(0,r.jsx)(n.p,{children:"\u4e3b\u5e93\u4e0a\u5220\u9664id\u4e3a6666666\u7684\u6570\u636e\uff0c\u7136\u540e\u505a\u4e00\u4e0bvacuum\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# delete from test where id = 6666666;"}),"\n",(0,r.jsx)(n.p,{children:"DELETE 1"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# vacuum test;"}),"\n",(0,r.jsx)(n.p,{children:"VACUUM"}),"\n",(0,r.jsx)(n.p,{children:"\u518d\u53bb\u5907\u5e93\u4e0a\u7b49\u5f85\u67e5\u8be2\u5b8c\u6210\uff0c\u65f6\u95f4\u7a0d\u957f\uff0c\u53ef\u4ee5\u770b\u5230\u5e76\u672a\u53d1\u751f\u4e0a\u9762\u7684\u51b2\u7a81\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select count(*) from test where id = 6666666;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0count"}),"\n",(0,r.jsx)(n.p,{children:"-------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0\xa0\xa01"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.h2,{id:"42restart_lsn",children:"4.2\xa0restart_lsn"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# \\d pg_replication_slots"}),"\n",(0,r.jsx)(n.p,{children:'\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0View "pg_catalog.pg_replication_slots"'}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0\xa0\xa0\xa0\xa0Column \xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0Type \xa0\xa0| Collation | Nullable | Default"}),"\n",(0,r.jsx)(n.p,{children:"..."}),"\n",(0,r.jsx)(n.p,{children:"\xa0restart_lsn \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| pg_lsn \xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0|"}),"\n",(0,r.jsx)(n.p,{children:"\u5bf9\u4e8erestart_lsn\u7684\u5b98\u65b9\u89e3\u91ca\u662fThe address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints. NULL if the LSN of this slot has never been reserved\uff0c\u610f\u601d\u5c31\u662f\u4e3b\u5e93checkpoint\u7684\u65f6\u5019\u4e0d\u4f1a\u5220\u9664\u8fd9\u4e4b\u540e\u7684wal\u65e5\u5fd7\uff0c\u4ee5\u53ca\u8fc7\u65e9\u7684\u5f52\u6863\u51fa\u53bb\uff0c\u4e3a\u5907\u5e93\u4fdd\u7559\u7740\u3002"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# \\d pg_replication_slots"}),"\n",(0,r.jsx)(n.p,{children:'\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0View "pg_catalog.pg_replication_slots"'}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0\xa0\xa0\xa0\xa0Column \xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0Type \xa0\xa0| Collation | Nullable | Default"}),"\n",(0,r.jsx)(n.p,{children:"..."}),"\n",(0,r.jsx)(n.p,{children:"\xa0restart_lsn \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| pg_lsn \xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0|"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_walfile_name(restart_lsn) from pg_replication_slots ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0\xa0\xa0pg_walfile_name \xa0\xa0\xa0\xa0\xa0"}),"\n",(0,r.jsx)(n.p,{children:"--------------------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa000000001000000050000007E"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"\u6a21\u62df\u4e00\u4e0b\uff0c\u6ca1\u6709\u590d\u5236\u69fd\u7684\u60c5\u51b5\u4e0b\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_drop_replication_slot('slot1');"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_drop_replication_slot"}),"\n",(0,r.jsx)(n.p,{children:"--------------------------"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select client_addr,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0client_addr \xa0\xa0| sync_state"}),"\n",(0,r.jsx)(n.p,{children:"-----------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0192.168.211.166 | sync"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select * from pg_replication_slots ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot_name | plugin | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn"}),"\n",(0,r.jsx)(n.p,{children:"-----------+--------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------"}),"\n",(0,r.jsx)(n.p,{children:"(0 rows)"}),"\n",(0,r.jsx)(n.p,{children:"\u5173\u6389\u5907\u5e93\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select client_addr,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0client_addr | sync_state"}),"\n",(0,r.jsx)(n.p,{children:"-------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"(0 rows)"}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u4e3b\u5e93\u4e0a\u9891\u7e41\u7684\u521b\u5efa\u8868\uff0c\u4ee5\u53ca\u5207\u6362WAL\u65e5\u5fd7\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test2(id int);"}),"\n",(0,r.jsx)(n.p,{children:"^CCancel request sent"}),"\n",(0,r.jsx)(n.p,{children:"WARNING: \xa0canceling wait for synchronous replication due to user request"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0The transaction has already committed locally, but might not have been replicated to the standby."}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_switch_wal();"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_switch_wal"}),"\n",(0,r.jsx)(n.p,{children:"---------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa00/3016168"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test3(id int);"}),"\n",(0,r.jsx)(n.p,{children:"^CCancel request sent"}),"\n",(0,r.jsx)(n.p,{children:"WARNING: \xa0canceling wait for synchronous replication due to user request"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0The transaction has already committed locally, but might not have been replicated to the standby."}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_switch_wal();"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_switch_wal"}),"\n",(0,r.jsx)(n.p,{children:"---------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa00/4003A50"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test4(id int);"}),"\n",(0,r.jsx)(n.p,{children:"^CCancel request sent"}),"\n",(0,r.jsx)(n.p,{children:"WARNING: \xa0canceling wait for synchronous replication due to user request"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0The transaction has already committed locally, but might not have been replicated to the standby."}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_switch_wal();"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_switch_wal"}),"\n",(0,r.jsx)(n.p,{children:"---------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa00/50011A0"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# checkpoint ;"}),"\n",(0,r.jsx)(n.p,{children:"CHECKPOINT"}),"\n",(0,r.jsx)(n.p,{children:"\u518d\u542f\u52a8\u5907\u673a\uff0c\u53ef\u4ee5\u770b\u5230\u6d41\u590d\u5236\u5173\u7cfb\u65ad\u4e86\uff0c\u770b\u4e0b\u65e5\u5fd7\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select client_addr,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0client_addr | sync_state"}),"\n",(0,r.jsx)(n.p,{children:"-------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"(0 rows)"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:30.044 PDT [4178] FATAL: \xa0could not receive data from WAL stream: ERROR: \xa0requested WAL segment 000000010000000000000003 has already been removed"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:30.132 PDT [4179] LOG: \xa0started streaming WAL from primary at 0/3000000 on timeline 1"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:30.132 PDT [4179] FATAL: \xa0could not receive data from WAL stream: ERROR: \xa0requested WAL segment 000000010000000000000003 has already been removed"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:35.077 PDT [4180] LOG: \xa0started streaming WAL from primary at 0/3000000 on timeline 1"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:35.078 PDT [4180] FATAL: \xa0could not receive data from WAL stream: ERROR: \xa0requested WAL segment 000000010000000000000003 has already been removed"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:40.095 PDT [4181] LOG: \xa0started streaming WAL from primary at 0/3000000 on timeline 1"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:40.096 PDT [4181] FATAL: \xa0could not receive data from WAL stream: ERROR: \xa0requested WAL segment 000000010000000000000003 has already been removed"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:45.089 PDT [4182] LOG: \xa0started streaming WAL from primary at 0/3000000 on timeline 1"}),"\n",(0,r.jsx)(n.p,{children:"2020-03-24 08:32:45.089 PDT [4182] FATAL: \xa0could not receive data from WAL stream: ERROR: \xa0requested WAL segment 000000010000000000000003 has already been removed"}),"\n",(0,r.jsx)(n.p,{children:"\u6062\u590d\u4e0b\u73af\u5883\uff0c\u4f7f\u7528\u590d\u5236\u69fd\uff0c\u770b\u4e0b\u60c5\u51b5\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select client_addr,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0client_addr \xa0\xa0| sync_state"}),"\n",(0,r.jsx)(n.p,{children:"-----------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0192.168.211.166 | sync"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select * from pg_replication_slots ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot_name | plugin | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn"}),"\n",(0,r.jsx)(n.p,{children:"-----------+--------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0slot1 \xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0| physical \xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| f \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| t \xa0\xa0\xa0\xa0\xa0| \xa0\xa0\xa0\xa0\xa0\xa04496 | \xa0486 | \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0| 0/3000060 \xa0\xa0|"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u5173\u6389\u5907\u5e93\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select client_addr,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0client_addr | sync_state"}),"\n",(0,r.jsx)(n.p,{children:"-------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"(0 rows)"}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u4e3b\u5e93\u4e0a\u9891\u7e41\u7684\u521b\u5efa\u8868\uff0c\u4ee5\u53ca\u5207\u6362WAL\u65e5\u5fd7\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test1(id int);"}),"\n",(0,r.jsx)(n.p,{children:"^CCancel request sent"}),"\n",(0,r.jsx)(n.p,{children:"WARNING: \xa0canceling wait for synchronous replication due to user request"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0The transaction has already committed locally, but might not have been replicated to the standby."}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_switch_wal();"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_switch_wal"}),"\n",(0,r.jsx)(n.p,{children:"---------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa00/3014FF0"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test2(id int);"}),"\n",(0,r.jsx)(n.p,{children:"^CCancel request sent"}),"\n",(0,r.jsx)(n.p,{children:"WARNING: \xa0canceling wait for synchronous replication due to user request"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0The transaction has already committed locally, but might not have been replicated to the standby."}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_switch_wal();"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_switch_wal"}),"\n",(0,r.jsx)(n.p,{children:"---------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa00/40011A0"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# create table test3(id int);"}),"\n",(0,r.jsx)(n.p,{children:"^CCancel request sent"}),"\n",(0,r.jsx)(n.p,{children:"WARNING: \xa0canceling wait for synchronous replication due to user request"}),"\n",(0,r.jsx)(n.p,{children:"DETAIL: \xa0The transaction has already committed locally, but might not have been replicated to the standby."}),"\n",(0,r.jsx)(n.p,{children:"CREATE TABLE"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select pg_switch_wal();"}),"\n",(0,r.jsx)(n.p,{children:"\xa0pg_switch_wal"}),"\n",(0,r.jsx)(n.p,{children:"---------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa00/5003A50"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# checkpoint ;"}),"\n",(0,r.jsx)(n.p,{children:"CHECKPOINT"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# select client_addr,sync_state from pg_stat_replication ;"}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0client_addr \xa0\xa0| sync_state"}),"\n",(0,r.jsx)(n.p,{children:"-----------------+------------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0192.168.211.166 | sync"}),"\n",(0,r.jsx)(n.p,{children:"(1 row)"}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u5907\u5e93\u4e0a\u67e5\u4e00\u4e0b\u662f\u5426\u6709\u8fd9\u4e9b\u8868\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6d41\u590d\u5236\u6b63\u5e38\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"postgres=# \\d"}),"\n",(0,r.jsx)(n.p,{children:"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0List of relations"}),"\n",(0,r.jsx)(n.p,{children:"\xa0Schema | Name \xa0| Type \xa0| \xa0Owner \xa0\xa0"}),"\n",(0,r.jsx)(n.p,{children:"--------+-------+-------+----------"}),"\n",(0,r.jsx)(n.p,{children:"\xa0public | test1 | table | postgres"}),"\n",(0,r.jsx)(n.p,{children:"\xa0public | test2 | table | postgres"}),"\n",(0,r.jsx)(n.p,{children:"\xa0public | test3 | table | postgres"}),"\n",(0,r.jsx)(n.p,{children:"(3 rows)"}),"\n",(0,r.jsxs)(n.h2,{id:"5\u7ed3\u8bba",children:["5\xa0",(0,r.jsx)(n.strong,{children:"\u7ed3\u8bba"})]}),"\n",(0,r.jsx)(n.p,{children:"1\uff0e\u590d\u5236\u69fd\u9632\u6b62\u5907\u5e93\u9700\u8981\u7684wal\u65e5\u5fd7\u5728\u4e3b\u5e93\u88ab\u5220\u9664\uff0c\u4e3b\u5e93\u4f1a\u6839\u636e\u5907\u5e93\u8fd4\u56de\u7684\u4fe1\u606f\u786e\u8ba4\u54ea\u4e9bwal\u65e5\u5fd7\u5df2\u4e0d\u518d\u9700\u8981\uff0c\u624d\u80fd\u8fdb\u884c\u6e05\u7406\u3002"}),"\n",(0,r.jsx)(n.p,{children:"2\uff0e\u5f53\u5141\u8bb8\u5e94\u7528\u8fde\u63a5\u4ece\u5e93\u505a\u53ea\u8bfb\u67e5\u8be2\u65f6\uff0c\u590d\u5236\u69fd\u53ef\u4ee5\u4e0e\u53c2\u6570hot_standby_feedback\u914d\u5408\u4f7f\u7528\uff0c\u4f7f\u4e3b\u5e93\u7684vacuum\u64cd\u4f5c\u4e0d\u4f1a\u8fc7\u65e9\u7684\u6e05\u6389\u4ece\u5e93\u67e5\u8be2\u9700\u8981\u7684\u8bb0\u5f55\uff0c\u800c\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff1aERROR: canceling statement due to conflict with recovery"}),"\n",(0,r.jsx)(n.p,{children:"\u4f46\u662f\u4e5f\u8981\u6ce8\u610f\u51e0\u70b9\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"1\uff0e\u5982\u679c\u6536\u4e0d\u5230\u4ece\u5e93\u7684reply\uff0c\u590d\u5236\u69fd\u7684\u72b6\u6001restart lsn\u4f1a\u4fdd\u6301\u4e0d\u53d8\uff0c\u9020\u6210\u4e3b\u5e93\u4f1a\u4e00\u76f4\u4fdd\u7559\u672c\u5730\u65e5\u5fd7\uff0c\u53ef\u80fd\u5bfc\u81f4\u65e5\u5fd7\u78c1\u76d8\u6ee1\u3002\u6240\u4ee5\u5e94\u8be5\u5b9e\u65f6\u76d1\u63a7\u65e5\u5fd7\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\uff0c\u5e76\u8bbe\u7f6e\u8f83\u5c0f\u7684wal_sender_timeout\uff0c\u9ed8\u8ba4\u4e3a60s\uff0c\u53ca\u65e9\u53d1\u73b0\u4ece\u5e93\u65ad\u6389\u7684\u60c5\u51b5\u3002"}),"\n",(0,r.jsx)(n.p,{children:"2\uff0e\u5c06hot_standby_feedback\u8bbe\u4e3aon\u65f6\uff0c\u5982\u679c\u4ece\u5e93\u957f\u65f6\u95f4\u6709\u6162\u67e5\u8be2\u53d1\u751f\uff0c\u53ef\u80fd\u5bfc\u81f4\u53d1\u56de\u5230\u4e3b\u5e93\u7684xmin\u53d8\u5316\u8f83\u6162\uff0c\u4e3b\u5e93\u7684vaccum\u64cd\u4f5c\u505c\u6ede\uff0c\u9020\u6210\u4e3b\u5e93\u88ab\u9891\u7e41\u66f4\u65b0\u7684\u8868\u5927\u5c0f\u66b4\u589e\uff0c\u5bfc\u81f4\u4e25\u91cd\u7684\u8868\u81a8\u80c0\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u9488\u5bf9\u63aa\u65bd\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"1\uff0e\u53ef\u4ee5\u589e\u52a0wal\u65e5\u5fd7\u4e2a\u6570\u7684\u76d1\u63a7\uff0c\u5f53wal\u65e5\u5fd7\u6570\u91cf\u8d85\u8fc7\u6b63\u5e38\u503c\u544a\u8b66\u3002"}),"\n",(0,r.jsx)(n.p,{children:"2\uff0e\u505a\u597d\u5bf9\u6bcf\u4e2a\u590d\u5236\u69fd\u540c\u6b65\u72b6\u6001\u7684\u76d1\u63a7\uff0c\u51fa\u73b0\u67d0\u4e2a\u69fd\u540c\u6b65\u72b6\u6001\u5f02\u5e38\u8981\u53ca\u65f6\u5904\u7406\uff0c\u540c\u6b65\u5f02\u5e38\u4f1a\u9020\u6210lsn\u4e0d\u5411\u524d\u63a8\u8fdb\uff0c\u5bfc\u81f4wal\u5806\u79ef\u3002"}),"\n",(0,r.jsx)(n.p,{children:"3\uff0e\u5bf9\u4e8e\u4e1a\u52a1\u5f88\u7a7a\u95f2\u4f46\u662f\u6570\u636e\u9700\u8981\u540c\u6b65\u7684\u5e93\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u811a\u672c\uff0c\u5b9a\u671f\u66f4\u65b0\u65e0\u7528\u8868\uff0c\u624b\u5de5\u63a8\u8fdblsn\u3002"}),"\n",(0,r.jsx)(n.p,{children:"4\uff0e\u5982\u679cwal\u65e5\u5fd7\u5df2\u7ecf\u5806\u79ef\u5f88\u591a\u78c1\u76d8\u9a6c\u4e0a\u8981\u7206\u70b8\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u8003\u8651\u5e94\u6025\u5220\u6389\u590d\u5236\u69fd\u4e4b\u524d\u8981\u8bc4\u4f30\u5269\u4f59\u7a7a\u95f4\u662f\u5426\u8fd8\u6709\u8db3\u591f\u5bcc\u4f59\uff0c\u56e0\u4e3a\u5373\u4f7f\u5220\u6389\u590d\u5236\u69fd\uff0cwal\u65e5\u5fd7\u4e5f\u4e0d\u662f\u9a6c\u4e0a\u5c31\u4f1a\u6e05\u7406\uff0c\u5220\u6389\u540e\u4e3b\u5e93vacuum\u4e5f\u4f1a\u4ea7\u751f\u8f83\u591axlog\u65e5\u5fd7\uff0c\u4e00\u5b9a\u8981\u505a\u597d\u8bc4\u4f30\u3002"}),"\n",(0,r.jsx)(n.p,{children:"5\uff0e\u589e\u52a0pg_replication_slot()\u89c6\u56fe\u4e2drestart_lsn\u7684\u76d1\u63a7\uff0c\u5bf9\u4e8e\u843d\u540e\u8f83\u5927\u548c\u957f\u671f\u4e0d\u63a8\u8fdb\u7684lsn\u8fdb\u884c\u544a\u8b66\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u6700\u540e\u5f15\u7528\u4e00\u4e0b\u5fae\u4fe1\u7fa4\u5206\u4eab\u7684PostgreSQL\u6d41\u590d\u5236\u56fe\u7247\uff1a"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://mmbiz.qpic.cn/mmbiz_png/lniadOK6Dzb4Js6Vbw6iaPTWIAUEnmOF4rAIepia5Uaj6yeMWF42SIpsEB5KODTdFefnjZ11raicVnib8r7CEentscQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"\u56fe\u7247"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://mmbiz.qpic.cn/mmbiz_png/lniadOK6Dzb4Js6Vbw6iaPTWIAUEnmOF4rNmw1TMDwlpxuxGrS40TCLWHUsKTSYaUUCa82d454iaoBRDEIxfAujqg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"\u56fe\u7247"})})]})}function o(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(96540);const r={},l=t.createContext(r);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);